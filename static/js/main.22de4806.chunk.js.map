{"version":3,"sources":["components/Form.jsx","components/Quotes.jsx","App.js","reportWebVitals.js","index.js"],"names":["Form","newQuote","useState","asunto","nombre","fecha","hora","desc","datos","actualizarDatos","error","updateError","updateQuote","e","target","name","value","className","onSubmit","preventDefault","trim","console","log","id","uuidv4","type","onChange","Quotes","quotes","eliminarMeet","onClick","App","iniQuotes","JSON","parse","localStorage","getItem","saveQuote","useEffect","setItem","stringify","filter","corredor2","quote","map","corredor1","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.22de4806.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport {v4 as uuidv4} from 'uuid';\r\n\r\nconst Form = ({newQuote}) => {\r\n\r\n    const [datos, actualizarDatos]= useState({\r\n        asunto:\"\",\r\n        nombre:\"\",\r\n        fecha:\"\",\r\n        hora:\"\",\r\n        desc:\"\"\r\n    })\r\n\r\n    //Statement de validación (true : genera msj de error / false : continua)\r\n    const [error, updateError] = useState(false);\r\n\r\n    //Extraer datos con destructuring\r\n    const {asunto, nombre, fecha, hora, desc} = datos;\r\n\r\n    //Función para escuchar las modificaciones de los campos\r\n    const updateQuote = (e) =>{\r\n        actualizarDatos({\r\n            ...datos,\r\n           [e.target.name] : e.target.value\r\n        })\r\n    } \r\n\r\n    //Funcion submit\r\n    const submit = (e) => { \r\n        //PREVIENE EL QUERY EN LA BARRA DE BUSQUEDA DEL NAVEGADOR\r\n        e.preventDefault();\r\n\r\n        //VALIDACION DE CAMPOS\r\n        if(asunto.trim() ===\"\" || nombre.trim() ===\"\" || fecha.trim() ===\"\" || hora.trim() ===\"\" ||\r\n        desc.trim() ===\"\"){\r\n            console.log(\"error\");\r\n            updateError(true);\r\n            return;\r\n        }\r\n            updateError(false);\r\n\r\n            //Asignando id único con uuid (Import)\r\n            datos.id= uuidv4();\r\n\r\n            //Guardando datos en la constante newQuote\r\n            newQuote(datos);\r\n            \r\n            //Reiniciar formulario\r\n            actualizarDatos({\r\n                asunto:\"\",\r\n                nombre:\"\",\r\n                fecha:\"\",\r\n                hora:\"\",\r\n                desc:\"\"\r\n            })\r\n        \r\n    }\r\n\r\n\r\n    return ( \r\n        <div className=\"Form\">\r\n        <h2>Nueva nota</h2>\r\n        <form\r\n        onSubmit={submit}\r\n        >\r\n        {error\r\n        ? <p>Rellene todos los campos.</p>\r\n\r\n        :null}\r\n        \r\n            <label>Asunto</label>\r\n            <input\r\n                type=\"text\"\r\n                name=\"asunto\"\r\n                //onChange escucha los cambios del input\r\n                onChange={updateQuote}\r\n                //Asignamos value\r\n                value={asunto}\r\n                \r\n            />\r\n            <label>Nombre</label>\r\n            <input\r\n                type=\"text\"\r\n                name=\"nombre\"\r\n                onChange={updateQuote}\r\n                value={nombre}\r\n                \r\n            />\r\n            <label>Fecha</label>\r\n            <input\r\n                type=\"date\"\r\n                name=\"fecha\"\r\n                onChange={updateQuote}\r\n                value={fecha}\r\n                \r\n            />\r\n\r\n            <label>Hora</label>\r\n            <input\r\n                type=\"time\"\r\n                name=\"hora\"\r\n                onChange={updateQuote}\r\n                value={hora}\r\n                \r\n            />\r\n\r\n            <label>Resumen</label>\r\n            <input\r\n                type=\"text\"\r\n                name=\"desc\"\r\n                onChange={updateQuote}\r\n                value={desc}\r\n                \r\n            />\r\n            <div className=\"button\">\r\n            <button className=\"submit\"\r\n            type=\"submit\"\r\n            >Agregar</button>\r\n            </div>\r\n            \r\n        </form>\r\n        </div>\r\n        \r\n     );\r\n}\r\n \r\nexport default Form;","import React from \"react\";\r\n\r\nconst Quotes = ({ quotes, eliminarMeet }) => {\r\n  const { asunto, nombre, fecha, hora, desc, id} = quotes;\r\n\r\n\r\n  return (\r\n      <div className=\"quote\">\r\n      <div className=\"head\">\r\n      <h3>{asunto}</h3>\r\n        <button\r\n        onClick={ () => eliminarMeet (id)}\r\n        >&#x2705;&#xfe0e;\r\n        </button>\r\n      </div>\r\n        \r\n        <p>\r\n          <span>nombre</span>\r\n          {nombre}\r\n        </p>\r\n        <p><span>fecha</span>{fecha}</p>\r\n        <p><span>hora</span>{hora}</p>\r\n        <p><span>resumen</span>{desc}</p>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default Quotes;\r\n","import React, { Fragment, useState, useEffect } from \"react\";\nimport Form from \"./components/Form\";\nimport Quotes from \"./components/Quotes\";\nimport \"./App.css\";\n\nfunction App() {\n\n  //Obteniendo registros del Local Storage - JSON = ArrayList\n  let iniQuotes = JSON.parse(localStorage.getItem('quotes'));\n  if(!iniQuotes){\n    iniQuotes = [];\n\n  }\n  //useState inicial de los registros de localStorage\n  const [quotes, saveQuote]= useState(iniQuotes);\n\n  //useEffect (document.ready)\n  useEffect( () => {\n      //Guardando quotes en el localStorage\n      localStorage.setItem('quotes', JSON.stringify(quotes));//ArrayList = JSON\n  }, [quotes]); //Inicializa cada que hay cambios en quotes\n  \n\n  //Función para guardar los datos ingresados en la cita \n  const newQuote =  (quote) => {\n    // console.log(quote)\n    saveQuote([...quotes,\n      quote])\n  }\n\n  //Función filtrar por id\n  const eliminarMeet = id => {\n    const newQuote = quotes.filter(corredor2 => corredor2.id !== id);\n    saveQuote(newQuote);\n  }\n\n\n  return (\n    <Fragment>\n      <div className=\"app\">\n        <div className=\"Window\">\n          <div className=\"title\">\n            <h1>&#x2396; schedule</h1>\n          </div>\n          <Form\n          newQuote={newQuote}\n           />\n        </div>\n        <div className=\"quotes\">\n        {quotes.map( corredor1 => (\n          <Quotes\n          key={corredor1.id}\n          quotes={corredor1}\n          eliminarMeet={eliminarMeet}\n          />\n       \n        ))}\n        </div>\n        \n    \n        </div>\n    </Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}